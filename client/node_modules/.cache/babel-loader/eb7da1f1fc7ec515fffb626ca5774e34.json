{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\trevo\\\\Desktop\\\\shop-shop\\\\client\\\\src\\\\components\\\\CategoryMenu\\\\index.js\";\n// import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\n\nfunction CategoryMenu(_ref) {\n  let {} = _ref;\n  const [state, dispatch] = useStoreContext();\n  const {\n    categories\n  } = state;\n  const {\n    data: categoryData\n  } = useQuery(QUERY_CATEGORIES);\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n\n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Choose a Category:\"), categories.map(item => /*#__PURE__*/React.createElement(\"button\", {\n    key: item._id,\n    onClick: () => {\n      handleClick(item._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, item.name)));\n}\n\nexport default CategoryMenu;","map":{"version":3,"names":["useQuery","QUERY_CATEGORIES","useStoreContext","React","useEffect","UPDATE_CATEGORIES","UPDATE_CURRENT_CATEGORY","CategoryMenu","state","dispatch","categories","data","categoryData","type","handleClick","id","currentCategory","map","item","_id","name"],"sources":["C:/Users/trevo/Desktop/shop-shop/client/src/components/CategoryMenu/index.js"],"sourcesContent":["// import React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { QUERY_CATEGORIES } from '../../utils/queries';\nimport { useStoreContext } from \"../../utils/GlobalState\";\nimport React, { useEffect } from 'react';\nimport { UPDATE_CATEGORIES, UPDATE_CURRENT_CATEGORY } from '../../utils/actions';\n\nfunction CategoryMenu({}) {\n  const [state, dispatch] = useStoreContext();\n\n  const { categories } = state;\n  \n  const { data: categoryData } = useQuery(QUERY_CATEGORIES);\n\n  useEffect(() => {\n    // if categoryData exists or has changed from the response of useQuery, then run dispatch()\n    if (categoryData) {\n      // execute our dispatch function with our action object indicating the type of action and the data to set our state for categories to\n      dispatch({\n        type: UPDATE_CATEGORIES,\n        categories: categoryData.categories\n      });\n    }\n  }, [categoryData, dispatch]);\n  \n  const handleClick = id => {\n    dispatch({\n      type: UPDATE_CURRENT_CATEGORY,\n      currentCategory: id\n    });\n  };\n\n  return (\n    <div>\n      <h2>Choose a Category:</h2>\n      {categories.map((item) => (\n        <button\n          key={item._id}\n          onClick={() => {\n            handleClick(item._id);\n          }}\n        >\n          {item.name}\n        </button>\n      ))}\n    </div>\n  );\n}\n\nexport default CategoryMenu;\n"],"mappings":";AAAA;AACA,SAASA,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,eAAT,QAAgC,yBAAhC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,iBAAT,EAA4BC,uBAA5B,QAA2D,qBAA3D;;AAEA,SAASC,YAAT,OAA0B;EAAA,IAAJ,EAAI;EACxB,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,eAAe,EAAzC;EAEA,MAAM;IAAEQ;EAAF,IAAiBF,KAAvB;EAEA,MAAM;IAAEG,IAAI,EAAEC;EAAR,IAAyBZ,QAAQ,CAACC,gBAAD,CAAvC;EAEAG,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,YAAJ,EAAkB;MAChB;MACAH,QAAQ,CAAC;QACPI,IAAI,EAAER,iBADC;QAEPK,UAAU,EAAEE,YAAY,CAACF;MAFlB,CAAD,CAAR;IAID;EACF,CATQ,EASN,CAACE,YAAD,EAAeH,QAAf,CATM,CAAT;;EAWA,MAAMK,WAAW,GAAGC,EAAE,IAAI;IACxBN,QAAQ,CAAC;MACPI,IAAI,EAAEP,uBADC;MAEPU,eAAe,EAAED;IAFV,CAAD,CAAR;EAID,CALD;;EAOA,oBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,wBADF,EAEGL,UAAU,CAACO,GAAX,CAAgBC,IAAD,iBACd;IACE,GAAG,EAAEA,IAAI,CAACC,GADZ;IAEE,OAAO,EAAE,MAAM;MACbL,WAAW,CAACI,IAAI,CAACC,GAAN,CAAX;IACD,CAJH;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAMGD,IAAI,CAACE,IANR,CADD,CAFH,CADF;AAeD;;AAED,eAAeb,YAAf"},"metadata":{},"sourceType":"module"}